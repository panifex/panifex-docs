<?xml version="1.0" encoding="UTF-8"?>
<!-- Panifex platform Copyright (C) 2013 Mario Krizmanic This library is 
	free software; you can redistribute it and/or modify it under the terms of 
	the GNU Lesser General Public License as published by the Free Software Foundation; 
	either version 2.1 of the License, or any later version. This library is 
	distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
	without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
	PURPOSE. See the GNU Lesser General Public License for more details. You 
	should have received a copy of the GNU Lesser General Public License along 
	with this library; if not, write to the Free Software Foundation, Inc., 51 
	Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA -->
<section version="5.0" xmlns="http://docbook.org/ns/docbook"
	xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd
        http://www.w3.org/2001/XInclude http://www.w3.org/2001/XInclude.xsd
        http://www.w3.org/1999/xlink http://www.w3.org/1999/xlink.xsd">

	<title>Defining SalutationMenuBinder</title>

	<para>
	The next step is to create a class which will register the actions in the application's menu.
	
				
		<figure>
			<title>Creating a Maven project - step 1</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="img04-create_maven_project_1.png"
						scalefit="1" width="100%" contentdepth="100%" />
				</imageobject>
			</mediaobject>
		</figure>
	
	Here simply fill the blanks in such a way:
	<programlisting>
	Package: org.panifex.salute.spi.impl
	Name: SalutationMenuBinder
	</programlisting>
	
	To conclude this step, define the SalutationMenuBinder with the following code:
	<programlisting>
	* creating an OpenContentMenuAction (menu option which opens SalutationContent) 
    
    private OpenContentMenuAction action; 
    
    public SalutationMenuBinder() { 
        action = new OpenContentMenuAction("salutation", "salutation"); 
        action.setLabel("Salutation"); 
    } 
    </programlisting>
    <programlisting>
    * defining subscription to AppMenuService

 	* An {@link AppMenuService} provides methods to dynamic manage the application menu. 
 	* <![CDATA[<p>]]> 
 	* It is used for binding and unbinding the menu's {@link MenuAction actions} and 
 	* {@link MenuNode nodes}. 

    @Inject 
    @Reference( 
        availability = "optional", 
        serviceInterface = AppMenuService.class, 
        referenceListeners = @ReferenceListener(ref = "salutationMenuBinder")) 
    private AppMenuService menuService; 

    
    @Bind 
    public void bind(AppMenuService menuService) { 
        this.menuService = menuService; 
        
        <footnote><para>Binds OpenContentMenuAction (from the first part of this code) to the menu itself</para></footnote>menuService.bindMenuItem(action); 
    } 
    
    @Unbind 
    public void unbind(AppMenuService menuService) { 
        if (menuService != null) { 
            menuService.unbindMenuItem(action); 
        } 
        this.menuService = null; 
    } 
    </programlisting>
	</para>
	
</section>